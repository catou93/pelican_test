%% ============================================================================
%% Abstract:
%%   This file contains helper functions to cache reusable library checksums
%%   into the binfo.mat file
%%
%% Copyright 2010-2017 The MathWorks, Inc.
%%

%if EXISTS("_CACHEREUSABLELIBS_") == 0
%assign _CACHEREUSABLELIBS_ = 1

%% Function: CacheReusableLibChecksumsInMatFile ===============================
%% Abstract:
%%     Cache reusable library checksums in the mat file
%function CacheReusableLibChecksums() void

    %with ::CompiledModel

    %createrecord csInterface {ModelName "%<CompiledModel.Name>"}
    %assign numReusableSubsystems = 0
    
    %foreach idx = NumSystems
      %assign sys = System[idx]
      %if LibSystemIsReusedLibraryFcn(sys)
        %if EXISTS(sys.ReusableLibraryChecksum)
          %assign cs = sys.ReusableLibraryChecksum
        %else
          %% Implementation already generated by previous build
          %assign cs = []
        %endif
        %assign sysName = sys.Name
        %assign NumCallSites = SIZE(sys.GraphCallSites)
        %assign callSiteSIDs = ""
        %foreach i = NumCallSites[0]
          %assign callSite = sys.GraphCallSites[i]
          %assign SID = Name + ":" + BlockHierarchyMap.Subsystem[callSite[0]].Block[callSite[1]].SID
          %assign callSiteSIDs = "%<callSiteSIDs>,%<SID>"
        %endforeach
        %assign libBlockPath = STRING("%<CGMODEL_ACCESS("CGModel.getRLSLibraryBlockPath", sys.SystemIdx)>")
        %createrecord checksumInfo { \
          Checksum %<cs>; \
          Name "%<sys.SystemFileName>"; \
          BlockSIDs "%<callSiteSIDs>"; \
          NumCallSIDs "%<NumCallSites[0]>"; \
          LibraryBlockPath STRING("%<libBlockPath>") \
        }
        %addtorecord csInterface ChecksumInfo %<checksumInfo>
        %assign numReusableSubsystems = numReusableSubsystems + 1
      %endif
    %endforeach
    
    %addtorecord csInterface NumReusableSubsystems %<numReusableSubsystems>
    
    %endwith %% ::CompiledModel
    %assign status = FEVAL("rtwprivate", "addSharedFunctionsToSCM", ...
       "%<LocalSharedCodeManagerFile>", csInterface, "%<CompiledModel.Name>")
    
    %% Check return value
    %if !ISEQUAL(status, TLC_TRUE)
      %error "Call to addSharedFunctionsToSCM must return status = true"
    %endif
    
%endfunction


%endif %% _CACHEREUSABLELIBS_
